import streamlit as st
from transformers import pipeline

# Models load рдХреЗрд╡рд▓ рдПрдХ рдмрд╛рд░ рд╣реЛрдВрдЧреЗ
@st.cache_resource
def load_models():
    summarizer = pipeline("summarization", model="facebook/bart-large-cnn")
    sentiment = pipeline("sentiment-analysis")
    return summarizer, sentiment

summarizer, sentiment_analyzer = load_models()

st.title("ЁЯУЭ Summarizer & Sentiment Analyzer")
st.write("рдиреАрдЪреЗ рдЯреЗрдХреНрд╕реНрдЯ рдкреЗрд╕реНрдЯ рдХрд░реЗрдВ рдФрд░ рд╕рд╛рд░рд╛рдВрд╢ (summary) рддрдерд╛ рднрд╛рд╡ (sentiment) рд░рд┐рдкреЛрд░реНрдЯ рдкрд╛рдПрдВред")

text = st.text_area("рд╕рд╛рд░рд╛рдВрд╢ рдХреЗ рд▓рд┐рдП рдЯреЗрдХреНрд╕реНрдЯ:")

max_len = st.slider("рдЕрдзрд┐рдХрддрдо рд╕рд╛рд░рд╛рдВрд╢ рд▓рдВрдмрд╛рдИ", 20, 200, 100)
min_len = st.slider("рдиреНрдпреВрдирддрдо рд╕рд╛рд░рд╛рдВрд╢ рд▓рдВрдмрд╛рдИ", 10, 100, 30)

if st.button("рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░реЗрдВ"):
    if text.strip():
        # рд╕рд╛рд░рд╛рдВрд╢ рдирд┐рдХрд╛рд▓рдирд╛
        summary = summarizer(
            text, 
            max_length=max_len, 
            min_length=min_len, 
            do_sample=False
        )[0]["summary_text"]

        # рднрд╛рд╡ рд╡рд┐рд╢реНрд▓реЗрд╖рдг
        sentiment_result = sentiment_analyzer(text[:512])  # рдкрд╣рд▓реЗ 512 characters рддрдХ
        sentiment_label = sentiment_result[0]["label"]
        sentiment_score = sentiment_result[0]["score"]

        # рдкрд░рд┐рдгрд╛рдо рджрд┐рдЦрд╛рдирд╛
        st.subheader("ЁЯУМ рд╕рд╛рд░рд╛рдВрд╢")
        st.write(summary)

        st.subheader("ЁЯУК рднрд╛рд╡ рд╡рд┐рд╢реНрд▓реЗрд╖рдг")
        st.json({
            "рд▓реЗрдмрд▓": sentiment_label,
            "рд╕реНрдХреЛрд░": sentiment_score
        })
    else:
        st.warning("рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдХреБрдЫ рдЯреЗрдХреНрд╕реНрдЯ рд▓рд┐рдЦреЗрдВред")
